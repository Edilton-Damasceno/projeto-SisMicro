
projetoRobo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000004e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000472  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800100  00800100  000004e6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004e6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000518  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000020  00000000  00000000  00000558  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000730  00000000  00000000  00000578  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000067d  00000000  00000000  00000ca8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000291  00000000  00000000  00001325  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000024  00000000  00000000  000015b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003cd  00000000  00000000  000015dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000045  00000000  00000000  000019a9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000010  00000000  00000000  000019ee  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a8 30       	cpi	r26, 0x08	; 8
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 48 00 	call	0x90	; 0x90 <main>
  88:	0c 94 37 02 	jmp	0x46e	; 0x46e <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <main>:
#define ECHO_PIN PB1 // PINO 9 ARDUINO

long tempo, distancia;

int main(void) {
	DDRB |= (1 << TRIG_PIN); // PINO TRIG COMO OUTPUT
  90:	84 b1       	in	r24, 0x04	; 4
  92:	81 60       	ori	r24, 0x01	; 1
  94:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1 << ECHO_PIN); // PINO ECHO COMO INPUT
  96:	84 b1       	in	r24, 0x04	; 4
  98:	8d 7f       	andi	r24, 0xFD	; 253
  9a:	84 b9       	out	0x04, r24	; 4

	PORTB &= ~((1 << TRIG_PIN) | (1 << ECHO_PIN)); // Inicia ECHO e TRIG como nível lógico baixo
  9c:	85 b1       	in	r24, 0x05	; 5
  9e:	8c 7f       	andi	r24, 0xFC	; 252
  a0:	85 b9       	out	0x05, r24	; 5

	TCCR1A = 0x00;
  a2:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	TCCR1B |= ((1 << CS11) & (1 << CS10)); // Ajusta o prescaler em 1:64 -> (64 / 16mHz) * 1m = 4ms
  a6:	e1 e8       	ldi	r30, 0x81	; 129
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	80 83       	st	Z, r24
	
	while(1) {
		// Envio do pulso de 10ms no pino TRIG
		PORTB |= (1 << TRIG_PIN);
  ae:	85 b1       	in	r24, 0x05	; 5
  b0:	81 60       	ori	r24, 0x01	; 1
  b2:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b4:	85 e3       	ldi	r24, 0x35	; 53
  b6:	8a 95       	dec	r24
  b8:	f1 f7       	brne	.-4      	; 0xb6 <main+0x26>
  ba:	00 00       	nop
		_delay_us(10);
		PORTB &= ~(1 << TRIG_PIN);
  bc:	85 b1       	in	r24, 0x05	; 5
  be:	8e 7f       	andi	r24, 0xFE	; 254
  c0:	85 b9       	out	0x05, r24	; 5
		
		while((PINB & (1 << ECHO_PIN)) == 0); // Não avança enquanto o ECHO estiver em nível lógico baixo
  c2:	19 9b       	sbis	0x03, 1	; 3
  c4:	fe cf       	rjmp	.-4      	; 0xc2 <main+0x32>
		TCNT1 = 0; // Inicia a contagem quando o ECHO sobre para nível lógico alto
  c6:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
  ca:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
		while(PINB & (1 << ECHO_PIN)); // Não avança enquanto o ECHO estiver em nível lógico alto
  ce:	19 99       	sbic	0x03, 1	; 3
  d0:	fe cf       	rjmp	.-4      	; 0xce <main+0x3e>
		
		tempo = TCNT1 * 4.0; // Converte em microssegundos
  d2:	60 91 84 00 	lds	r22, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
  d6:	70 91 85 00 	lds	r23, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
  da:	80 e0       	ldi	r24, 0x00	; 0
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	0e 94 3c 01 	call	0x278	; 0x278 <__floatunsisf>
  e2:	20 e0       	ldi	r18, 0x00	; 0
  e4:	30 e0       	ldi	r19, 0x00	; 0
  e6:	40 e8       	ldi	r20, 0x80	; 128
  e8:	50 e4       	ldi	r21, 0x40	; 64
  ea:	0e 94 ca 01 	call	0x394	; 0x394 <__mulsf3>
  ee:	0e 94 06 01 	call	0x20c	; 0x20c <__fixsfsi>
  f2:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <tempo>
  f6:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <tempo+0x1>
  fa:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <tempo+0x2>
  fe:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <tempo+0x3>
		distancia = tempo / 58.0; // Converte tempo em distância em centímetros
 102:	0e 94 3e 01 	call	0x27c	; 0x27c <__floatsisf>
 106:	20 e0       	ldi	r18, 0x00	; 0
 108:	30 e0       	ldi	r19, 0x00	; 0
 10a:	48 e6       	ldi	r20, 0x68	; 104
 10c:	52 e4       	ldi	r21, 0x42	; 66
 10e:	0e 94 94 00 	call	0x128	; 0x128 <__divsf3>
 112:	0e 94 06 01 	call	0x20c	; 0x20c <__fixsfsi>
 116:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
 11a:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 11e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 122:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
	PORTB &= ~((1 << TRIG_PIN) | (1 << ECHO_PIN)); // Inicia ECHO e TRIG como nível lógico baixo

	TCCR1A = 0x00;
	TCCR1B |= ((1 << CS11) & (1 << CS10)); // Ajusta o prescaler em 1:64 -> (64 / 16mHz) * 1m = 4ms
	
	while(1) {
 126:	c3 cf       	rjmp	.-122    	; 0xae <main+0x1e>

00000128 <__divsf3>:
 128:	0e 94 a8 00 	call	0x150	; 0x150 <__divsf3x>
 12c:	0c 94 90 01 	jmp	0x320	; 0x320 <__fp_round>
 130:	0e 94 89 01 	call	0x312	; 0x312 <__fp_pscB>
 134:	58 f0       	brcs	.+22     	; 0x14c <__divsf3+0x24>
 136:	0e 94 82 01 	call	0x304	; 0x304 <__fp_pscA>
 13a:	40 f0       	brcs	.+16     	; 0x14c <__divsf3+0x24>
 13c:	29 f4       	brne	.+10     	; 0x148 <__divsf3+0x20>
 13e:	5f 3f       	cpi	r21, 0xFF	; 255
 140:	29 f0       	breq	.+10     	; 0x14c <__divsf3+0x24>
 142:	0c 94 79 01 	jmp	0x2f2	; 0x2f2 <__fp_inf>
 146:	51 11       	cpse	r21, r1
 148:	0c 94 c4 01 	jmp	0x388	; 0x388 <__fp_szero>
 14c:	0c 94 7f 01 	jmp	0x2fe	; 0x2fe <__fp_nan>

00000150 <__divsf3x>:
 150:	0e 94 a1 01 	call	0x342	; 0x342 <__fp_split3>
 154:	68 f3       	brcs	.-38     	; 0x130 <__divsf3+0x8>

00000156 <__divsf3_pse>:
 156:	99 23       	and	r25, r25
 158:	b1 f3       	breq	.-20     	; 0x146 <__divsf3+0x1e>
 15a:	55 23       	and	r21, r21
 15c:	91 f3       	breq	.-28     	; 0x142 <__divsf3+0x1a>
 15e:	95 1b       	sub	r25, r21
 160:	55 0b       	sbc	r21, r21
 162:	bb 27       	eor	r27, r27
 164:	aa 27       	eor	r26, r26
 166:	62 17       	cp	r22, r18
 168:	73 07       	cpc	r23, r19
 16a:	84 07       	cpc	r24, r20
 16c:	38 f0       	brcs	.+14     	; 0x17c <__divsf3_pse+0x26>
 16e:	9f 5f       	subi	r25, 0xFF	; 255
 170:	5f 4f       	sbci	r21, 0xFF	; 255
 172:	22 0f       	add	r18, r18
 174:	33 1f       	adc	r19, r19
 176:	44 1f       	adc	r20, r20
 178:	aa 1f       	adc	r26, r26
 17a:	a9 f3       	breq	.-22     	; 0x166 <__divsf3_pse+0x10>
 17c:	35 d0       	rcall	.+106    	; 0x1e8 <__divsf3_pse+0x92>
 17e:	0e 2e       	mov	r0, r30
 180:	3a f0       	brmi	.+14     	; 0x190 <__divsf3_pse+0x3a>
 182:	e0 e8       	ldi	r30, 0x80	; 128
 184:	32 d0       	rcall	.+100    	; 0x1ea <__divsf3_pse+0x94>
 186:	91 50       	subi	r25, 0x01	; 1
 188:	50 40       	sbci	r21, 0x00	; 0
 18a:	e6 95       	lsr	r30
 18c:	00 1c       	adc	r0, r0
 18e:	ca f7       	brpl	.-14     	; 0x182 <__divsf3_pse+0x2c>
 190:	2b d0       	rcall	.+86     	; 0x1e8 <__divsf3_pse+0x92>
 192:	fe 2f       	mov	r31, r30
 194:	29 d0       	rcall	.+82     	; 0x1e8 <__divsf3_pse+0x92>
 196:	66 0f       	add	r22, r22
 198:	77 1f       	adc	r23, r23
 19a:	88 1f       	adc	r24, r24
 19c:	bb 1f       	adc	r27, r27
 19e:	26 17       	cp	r18, r22
 1a0:	37 07       	cpc	r19, r23
 1a2:	48 07       	cpc	r20, r24
 1a4:	ab 07       	cpc	r26, r27
 1a6:	b0 e8       	ldi	r27, 0x80	; 128
 1a8:	09 f0       	breq	.+2      	; 0x1ac <__divsf3_pse+0x56>
 1aa:	bb 0b       	sbc	r27, r27
 1ac:	80 2d       	mov	r24, r0
 1ae:	bf 01       	movw	r22, r30
 1b0:	ff 27       	eor	r31, r31
 1b2:	93 58       	subi	r25, 0x83	; 131
 1b4:	5f 4f       	sbci	r21, 0xFF	; 255
 1b6:	3a f0       	brmi	.+14     	; 0x1c6 <__divsf3_pse+0x70>
 1b8:	9e 3f       	cpi	r25, 0xFE	; 254
 1ba:	51 05       	cpc	r21, r1
 1bc:	78 f0       	brcs	.+30     	; 0x1dc <__divsf3_pse+0x86>
 1be:	0c 94 79 01 	jmp	0x2f2	; 0x2f2 <__fp_inf>
 1c2:	0c 94 c4 01 	jmp	0x388	; 0x388 <__fp_szero>
 1c6:	5f 3f       	cpi	r21, 0xFF	; 255
 1c8:	e4 f3       	brlt	.-8      	; 0x1c2 <__divsf3_pse+0x6c>
 1ca:	98 3e       	cpi	r25, 0xE8	; 232
 1cc:	d4 f3       	brlt	.-12     	; 0x1c2 <__divsf3_pse+0x6c>
 1ce:	86 95       	lsr	r24
 1d0:	77 95       	ror	r23
 1d2:	67 95       	ror	r22
 1d4:	b7 95       	ror	r27
 1d6:	f7 95       	ror	r31
 1d8:	9f 5f       	subi	r25, 0xFF	; 255
 1da:	c9 f7       	brne	.-14     	; 0x1ce <__divsf3_pse+0x78>
 1dc:	88 0f       	add	r24, r24
 1de:	91 1d       	adc	r25, r1
 1e0:	96 95       	lsr	r25
 1e2:	87 95       	ror	r24
 1e4:	97 f9       	bld	r25, 7
 1e6:	08 95       	ret
 1e8:	e1 e0       	ldi	r30, 0x01	; 1
 1ea:	66 0f       	add	r22, r22
 1ec:	77 1f       	adc	r23, r23
 1ee:	88 1f       	adc	r24, r24
 1f0:	bb 1f       	adc	r27, r27
 1f2:	62 17       	cp	r22, r18
 1f4:	73 07       	cpc	r23, r19
 1f6:	84 07       	cpc	r24, r20
 1f8:	ba 07       	cpc	r27, r26
 1fa:	20 f0       	brcs	.+8      	; 0x204 <__divsf3_pse+0xae>
 1fc:	62 1b       	sub	r22, r18
 1fe:	73 0b       	sbc	r23, r19
 200:	84 0b       	sbc	r24, r20
 202:	ba 0b       	sbc	r27, r26
 204:	ee 1f       	adc	r30, r30
 206:	88 f7       	brcc	.-30     	; 0x1ea <__divsf3_pse+0x94>
 208:	e0 95       	com	r30
 20a:	08 95       	ret

0000020c <__fixsfsi>:
 20c:	0e 94 0d 01 	call	0x21a	; 0x21a <__fixunssfsi>
 210:	68 94       	set
 212:	b1 11       	cpse	r27, r1
 214:	0c 94 c4 01 	jmp	0x388	; 0x388 <__fp_szero>
 218:	08 95       	ret

0000021a <__fixunssfsi>:
 21a:	0e 94 a9 01 	call	0x352	; 0x352 <__fp_splitA>
 21e:	88 f0       	brcs	.+34     	; 0x242 <__fixunssfsi+0x28>
 220:	9f 57       	subi	r25, 0x7F	; 127
 222:	98 f0       	brcs	.+38     	; 0x24a <__fixunssfsi+0x30>
 224:	b9 2f       	mov	r27, r25
 226:	99 27       	eor	r25, r25
 228:	b7 51       	subi	r27, 0x17	; 23
 22a:	b0 f0       	brcs	.+44     	; 0x258 <__fixunssfsi+0x3e>
 22c:	e1 f0       	breq	.+56     	; 0x266 <__fixunssfsi+0x4c>
 22e:	66 0f       	add	r22, r22
 230:	77 1f       	adc	r23, r23
 232:	88 1f       	adc	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	1a f0       	brmi	.+6      	; 0x23e <__fixunssfsi+0x24>
 238:	ba 95       	dec	r27
 23a:	c9 f7       	brne	.-14     	; 0x22e <__fixunssfsi+0x14>
 23c:	14 c0       	rjmp	.+40     	; 0x266 <__fixunssfsi+0x4c>
 23e:	b1 30       	cpi	r27, 0x01	; 1
 240:	91 f0       	breq	.+36     	; 0x266 <__fixunssfsi+0x4c>
 242:	0e 94 c3 01 	call	0x386	; 0x386 <__fp_zero>
 246:	b1 e0       	ldi	r27, 0x01	; 1
 248:	08 95       	ret
 24a:	0c 94 c3 01 	jmp	0x386	; 0x386 <__fp_zero>
 24e:	67 2f       	mov	r22, r23
 250:	78 2f       	mov	r23, r24
 252:	88 27       	eor	r24, r24
 254:	b8 5f       	subi	r27, 0xF8	; 248
 256:	39 f0       	breq	.+14     	; 0x266 <__fixunssfsi+0x4c>
 258:	b9 3f       	cpi	r27, 0xF9	; 249
 25a:	cc f3       	brlt	.-14     	; 0x24e <__fixunssfsi+0x34>
 25c:	86 95       	lsr	r24
 25e:	77 95       	ror	r23
 260:	67 95       	ror	r22
 262:	b3 95       	inc	r27
 264:	d9 f7       	brne	.-10     	; 0x25c <__fixunssfsi+0x42>
 266:	3e f4       	brtc	.+14     	; 0x276 <__fixunssfsi+0x5c>
 268:	90 95       	com	r25
 26a:	80 95       	com	r24
 26c:	70 95       	com	r23
 26e:	61 95       	neg	r22
 270:	7f 4f       	sbci	r23, 0xFF	; 255
 272:	8f 4f       	sbci	r24, 0xFF	; 255
 274:	9f 4f       	sbci	r25, 0xFF	; 255
 276:	08 95       	ret

00000278 <__floatunsisf>:
 278:	e8 94       	clt
 27a:	09 c0       	rjmp	.+18     	; 0x28e <__floatsisf+0x12>

0000027c <__floatsisf>:
 27c:	97 fb       	bst	r25, 7
 27e:	3e f4       	brtc	.+14     	; 0x28e <__floatsisf+0x12>
 280:	90 95       	com	r25
 282:	80 95       	com	r24
 284:	70 95       	com	r23
 286:	61 95       	neg	r22
 288:	7f 4f       	sbci	r23, 0xFF	; 255
 28a:	8f 4f       	sbci	r24, 0xFF	; 255
 28c:	9f 4f       	sbci	r25, 0xFF	; 255
 28e:	99 23       	and	r25, r25
 290:	a9 f0       	breq	.+42     	; 0x2bc <__floatsisf+0x40>
 292:	f9 2f       	mov	r31, r25
 294:	96 e9       	ldi	r25, 0x96	; 150
 296:	bb 27       	eor	r27, r27
 298:	93 95       	inc	r25
 29a:	f6 95       	lsr	r31
 29c:	87 95       	ror	r24
 29e:	77 95       	ror	r23
 2a0:	67 95       	ror	r22
 2a2:	b7 95       	ror	r27
 2a4:	f1 11       	cpse	r31, r1
 2a6:	f8 cf       	rjmp	.-16     	; 0x298 <__floatsisf+0x1c>
 2a8:	fa f4       	brpl	.+62     	; 0x2e8 <__floatsisf+0x6c>
 2aa:	bb 0f       	add	r27, r27
 2ac:	11 f4       	brne	.+4      	; 0x2b2 <__floatsisf+0x36>
 2ae:	60 ff       	sbrs	r22, 0
 2b0:	1b c0       	rjmp	.+54     	; 0x2e8 <__floatsisf+0x6c>
 2b2:	6f 5f       	subi	r22, 0xFF	; 255
 2b4:	7f 4f       	sbci	r23, 0xFF	; 255
 2b6:	8f 4f       	sbci	r24, 0xFF	; 255
 2b8:	9f 4f       	sbci	r25, 0xFF	; 255
 2ba:	16 c0       	rjmp	.+44     	; 0x2e8 <__floatsisf+0x6c>
 2bc:	88 23       	and	r24, r24
 2be:	11 f0       	breq	.+4      	; 0x2c4 <__floatsisf+0x48>
 2c0:	96 e9       	ldi	r25, 0x96	; 150
 2c2:	11 c0       	rjmp	.+34     	; 0x2e6 <__floatsisf+0x6a>
 2c4:	77 23       	and	r23, r23
 2c6:	21 f0       	breq	.+8      	; 0x2d0 <__floatsisf+0x54>
 2c8:	9e e8       	ldi	r25, 0x8E	; 142
 2ca:	87 2f       	mov	r24, r23
 2cc:	76 2f       	mov	r23, r22
 2ce:	05 c0       	rjmp	.+10     	; 0x2da <__floatsisf+0x5e>
 2d0:	66 23       	and	r22, r22
 2d2:	71 f0       	breq	.+28     	; 0x2f0 <__floatsisf+0x74>
 2d4:	96 e8       	ldi	r25, 0x86	; 134
 2d6:	86 2f       	mov	r24, r22
 2d8:	70 e0       	ldi	r23, 0x00	; 0
 2da:	60 e0       	ldi	r22, 0x00	; 0
 2dc:	2a f0       	brmi	.+10     	; 0x2e8 <__floatsisf+0x6c>
 2de:	9a 95       	dec	r25
 2e0:	66 0f       	add	r22, r22
 2e2:	77 1f       	adc	r23, r23
 2e4:	88 1f       	adc	r24, r24
 2e6:	da f7       	brpl	.-10     	; 0x2de <__floatsisf+0x62>
 2e8:	88 0f       	add	r24, r24
 2ea:	96 95       	lsr	r25
 2ec:	87 95       	ror	r24
 2ee:	97 f9       	bld	r25, 7
 2f0:	08 95       	ret

000002f2 <__fp_inf>:
 2f2:	97 f9       	bld	r25, 7
 2f4:	9f 67       	ori	r25, 0x7F	; 127
 2f6:	80 e8       	ldi	r24, 0x80	; 128
 2f8:	70 e0       	ldi	r23, 0x00	; 0
 2fa:	60 e0       	ldi	r22, 0x00	; 0
 2fc:	08 95       	ret

000002fe <__fp_nan>:
 2fe:	9f ef       	ldi	r25, 0xFF	; 255
 300:	80 ec       	ldi	r24, 0xC0	; 192
 302:	08 95       	ret

00000304 <__fp_pscA>:
 304:	00 24       	eor	r0, r0
 306:	0a 94       	dec	r0
 308:	16 16       	cp	r1, r22
 30a:	17 06       	cpc	r1, r23
 30c:	18 06       	cpc	r1, r24
 30e:	09 06       	cpc	r0, r25
 310:	08 95       	ret

00000312 <__fp_pscB>:
 312:	00 24       	eor	r0, r0
 314:	0a 94       	dec	r0
 316:	12 16       	cp	r1, r18
 318:	13 06       	cpc	r1, r19
 31a:	14 06       	cpc	r1, r20
 31c:	05 06       	cpc	r0, r21
 31e:	08 95       	ret

00000320 <__fp_round>:
 320:	09 2e       	mov	r0, r25
 322:	03 94       	inc	r0
 324:	00 0c       	add	r0, r0
 326:	11 f4       	brne	.+4      	; 0x32c <__fp_round+0xc>
 328:	88 23       	and	r24, r24
 32a:	52 f0       	brmi	.+20     	; 0x340 <__fp_round+0x20>
 32c:	bb 0f       	add	r27, r27
 32e:	40 f4       	brcc	.+16     	; 0x340 <__fp_round+0x20>
 330:	bf 2b       	or	r27, r31
 332:	11 f4       	brne	.+4      	; 0x338 <__fp_round+0x18>
 334:	60 ff       	sbrs	r22, 0
 336:	04 c0       	rjmp	.+8      	; 0x340 <__fp_round+0x20>
 338:	6f 5f       	subi	r22, 0xFF	; 255
 33a:	7f 4f       	sbci	r23, 0xFF	; 255
 33c:	8f 4f       	sbci	r24, 0xFF	; 255
 33e:	9f 4f       	sbci	r25, 0xFF	; 255
 340:	08 95       	ret

00000342 <__fp_split3>:
 342:	57 fd       	sbrc	r21, 7
 344:	90 58       	subi	r25, 0x80	; 128
 346:	44 0f       	add	r20, r20
 348:	55 1f       	adc	r21, r21
 34a:	59 f0       	breq	.+22     	; 0x362 <__fp_splitA+0x10>
 34c:	5f 3f       	cpi	r21, 0xFF	; 255
 34e:	71 f0       	breq	.+28     	; 0x36c <__fp_splitA+0x1a>
 350:	47 95       	ror	r20

00000352 <__fp_splitA>:
 352:	88 0f       	add	r24, r24
 354:	97 fb       	bst	r25, 7
 356:	99 1f       	adc	r25, r25
 358:	61 f0       	breq	.+24     	; 0x372 <__fp_splitA+0x20>
 35a:	9f 3f       	cpi	r25, 0xFF	; 255
 35c:	79 f0       	breq	.+30     	; 0x37c <__fp_splitA+0x2a>
 35e:	87 95       	ror	r24
 360:	08 95       	ret
 362:	12 16       	cp	r1, r18
 364:	13 06       	cpc	r1, r19
 366:	14 06       	cpc	r1, r20
 368:	55 1f       	adc	r21, r21
 36a:	f2 cf       	rjmp	.-28     	; 0x350 <__fp_split3+0xe>
 36c:	46 95       	lsr	r20
 36e:	f1 df       	rcall	.-30     	; 0x352 <__fp_splitA>
 370:	08 c0       	rjmp	.+16     	; 0x382 <__fp_splitA+0x30>
 372:	16 16       	cp	r1, r22
 374:	17 06       	cpc	r1, r23
 376:	18 06       	cpc	r1, r24
 378:	99 1f       	adc	r25, r25
 37a:	f1 cf       	rjmp	.-30     	; 0x35e <__fp_splitA+0xc>
 37c:	86 95       	lsr	r24
 37e:	71 05       	cpc	r23, r1
 380:	61 05       	cpc	r22, r1
 382:	08 94       	sec
 384:	08 95       	ret

00000386 <__fp_zero>:
 386:	e8 94       	clt

00000388 <__fp_szero>:
 388:	bb 27       	eor	r27, r27
 38a:	66 27       	eor	r22, r22
 38c:	77 27       	eor	r23, r23
 38e:	cb 01       	movw	r24, r22
 390:	97 f9       	bld	r25, 7
 392:	08 95       	ret

00000394 <__mulsf3>:
 394:	0e 94 dd 01 	call	0x3ba	; 0x3ba <__mulsf3x>
 398:	0c 94 90 01 	jmp	0x320	; 0x320 <__fp_round>
 39c:	0e 94 82 01 	call	0x304	; 0x304 <__fp_pscA>
 3a0:	38 f0       	brcs	.+14     	; 0x3b0 <__mulsf3+0x1c>
 3a2:	0e 94 89 01 	call	0x312	; 0x312 <__fp_pscB>
 3a6:	20 f0       	brcs	.+8      	; 0x3b0 <__mulsf3+0x1c>
 3a8:	95 23       	and	r25, r21
 3aa:	11 f0       	breq	.+4      	; 0x3b0 <__mulsf3+0x1c>
 3ac:	0c 94 79 01 	jmp	0x2f2	; 0x2f2 <__fp_inf>
 3b0:	0c 94 7f 01 	jmp	0x2fe	; 0x2fe <__fp_nan>
 3b4:	11 24       	eor	r1, r1
 3b6:	0c 94 c4 01 	jmp	0x388	; 0x388 <__fp_szero>

000003ba <__mulsf3x>:
 3ba:	0e 94 a1 01 	call	0x342	; 0x342 <__fp_split3>
 3be:	70 f3       	brcs	.-36     	; 0x39c <__mulsf3+0x8>

000003c0 <__mulsf3_pse>:
 3c0:	95 9f       	mul	r25, r21
 3c2:	c1 f3       	breq	.-16     	; 0x3b4 <__mulsf3+0x20>
 3c4:	95 0f       	add	r25, r21
 3c6:	50 e0       	ldi	r21, 0x00	; 0
 3c8:	55 1f       	adc	r21, r21
 3ca:	62 9f       	mul	r22, r18
 3cc:	f0 01       	movw	r30, r0
 3ce:	72 9f       	mul	r23, r18
 3d0:	bb 27       	eor	r27, r27
 3d2:	f0 0d       	add	r31, r0
 3d4:	b1 1d       	adc	r27, r1
 3d6:	63 9f       	mul	r22, r19
 3d8:	aa 27       	eor	r26, r26
 3da:	f0 0d       	add	r31, r0
 3dc:	b1 1d       	adc	r27, r1
 3de:	aa 1f       	adc	r26, r26
 3e0:	64 9f       	mul	r22, r20
 3e2:	66 27       	eor	r22, r22
 3e4:	b0 0d       	add	r27, r0
 3e6:	a1 1d       	adc	r26, r1
 3e8:	66 1f       	adc	r22, r22
 3ea:	82 9f       	mul	r24, r18
 3ec:	22 27       	eor	r18, r18
 3ee:	b0 0d       	add	r27, r0
 3f0:	a1 1d       	adc	r26, r1
 3f2:	62 1f       	adc	r22, r18
 3f4:	73 9f       	mul	r23, r19
 3f6:	b0 0d       	add	r27, r0
 3f8:	a1 1d       	adc	r26, r1
 3fa:	62 1f       	adc	r22, r18
 3fc:	83 9f       	mul	r24, r19
 3fe:	a0 0d       	add	r26, r0
 400:	61 1d       	adc	r22, r1
 402:	22 1f       	adc	r18, r18
 404:	74 9f       	mul	r23, r20
 406:	33 27       	eor	r19, r19
 408:	a0 0d       	add	r26, r0
 40a:	61 1d       	adc	r22, r1
 40c:	23 1f       	adc	r18, r19
 40e:	84 9f       	mul	r24, r20
 410:	60 0d       	add	r22, r0
 412:	21 1d       	adc	r18, r1
 414:	82 2f       	mov	r24, r18
 416:	76 2f       	mov	r23, r22
 418:	6a 2f       	mov	r22, r26
 41a:	11 24       	eor	r1, r1
 41c:	9f 57       	subi	r25, 0x7F	; 127
 41e:	50 40       	sbci	r21, 0x00	; 0
 420:	9a f0       	brmi	.+38     	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
 422:	f1 f0       	breq	.+60     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 424:	88 23       	and	r24, r24
 426:	4a f0       	brmi	.+18     	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 428:	ee 0f       	add	r30, r30
 42a:	ff 1f       	adc	r31, r31
 42c:	bb 1f       	adc	r27, r27
 42e:	66 1f       	adc	r22, r22
 430:	77 1f       	adc	r23, r23
 432:	88 1f       	adc	r24, r24
 434:	91 50       	subi	r25, 0x01	; 1
 436:	50 40       	sbci	r21, 0x00	; 0
 438:	a9 f7       	brne	.-22     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 43a:	9e 3f       	cpi	r25, 0xFE	; 254
 43c:	51 05       	cpc	r21, r1
 43e:	80 f0       	brcs	.+32     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 440:	0c 94 79 01 	jmp	0x2f2	; 0x2f2 <__fp_inf>
 444:	0c 94 c4 01 	jmp	0x388	; 0x388 <__fp_szero>
 448:	5f 3f       	cpi	r21, 0xFF	; 255
 44a:	e4 f3       	brlt	.-8      	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
 44c:	98 3e       	cpi	r25, 0xE8	; 232
 44e:	d4 f3       	brlt	.-12     	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
 450:	86 95       	lsr	r24
 452:	77 95       	ror	r23
 454:	67 95       	ror	r22
 456:	b7 95       	ror	r27
 458:	f7 95       	ror	r31
 45a:	e7 95       	ror	r30
 45c:	9f 5f       	subi	r25, 0xFF	; 255
 45e:	c1 f7       	brne	.-16     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 460:	fe 2b       	or	r31, r30
 462:	88 0f       	add	r24, r24
 464:	91 1d       	adc	r25, r1
 466:	96 95       	lsr	r25
 468:	87 95       	ror	r24
 46a:	97 f9       	bld	r25, 7
 46c:	08 95       	ret

0000046e <_exit>:
 46e:	f8 94       	cli

00000470 <__stop_program>:
 470:	ff cf       	rjmp	.-2      	; 0x470 <__stop_program>
